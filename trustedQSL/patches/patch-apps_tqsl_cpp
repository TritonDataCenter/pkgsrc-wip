$NetBSD: patch-apps_tqsl_cpp,v 1.3 2015/10/11 02:59:07 mef Exp $

(1)
Avoid following error (interim, only valid with db5)
/usr/pkgsrc/wip/trustedQSL/work/tqsl-2.0/apps/tqsl.cpp:1133:36: error: 'DB_VERSION_STRING' was not declared in this scope
gmake[2]: *** [apps/CMakeFiles/tqsl.dir/tqsl.cpp.o] Error 1
gmake[1]: *** [apps/CMakeFiles/tqsl.dir/all] Error 2

(2)
tqsl-2.0.1/apps/tqsl.cpp:2963:10: error: #pragma GCC diagnostic not allowed inside functions
tqsl-2.0.1/apps/tqsl.cpp:2967:10: error: #pragma GCC diagnostic not allowed inside functions

(3) Trial code for wxGTK30

--- apps/tqsl.cpp.orig	2015-09-20 09:15:24.000000000 +0900
+++ apps/tqsl.cpp	2015-11-17 23:08:20.000000000 +0900
@@ -64,7 +64,7 @@
 #endif
 #include <zlib.h>
 #include <openssl/opensslv.h> // only for version info!
-#include <db.h> //only for version info!
+#include <db5/db.h> //only for version info!
 
 #include <iostream>
 #include <fstream>
@@ -3428,7 +3428,7 @@ MyFrame::OnUpdateCheckDone(wxCommandEven
 // The macro for declaring a hash map defines a couple of typedefs
 // that it never uses. Current GCC warns about those. The pragma
 // below suppresses those warnings for those.
-#if !defined(__APPLE__) && !defined(_WIN32)
+#if !defined(__APPLE__) && !defined(_WIN32) && !defined(__NetBSD__) && !defined(__DragonFly__) && !defined(__FreeBSD__)
 	#pragma GCC diagnostic ignored "-Wunused-local-typedefs"
 #endif
 void
@@ -3632,7 +3632,7 @@ MyFrame::DoCheckForUpdates(bool silent, 
 		DoCheckExpiringCerts(noGUI);
 	return;
 }
-#if !defined(__APPLE__) && !defined(_WIN32)
+#if !defined(__APPLE__) && !defined(_WIN32) && !defined(__NetBSD__) && !defined(__DragonFly__) && !defined(__FreeBSD__)
 	#pragma GCC diagnostic warning "-Wunused-local-typedefs"
 #endif
 
@@ -4676,7 +4676,11 @@ QSLApp::OnInit() {
 	for (int i = 1; i < argc; i++) {
 		origCommandLine += wxT(" ");
 		origCommandLine += argv[i];
+#if defined (wxABI_VERSION) && (wxABI_VERSION < 30000 )
 		if (argv[i] && (argv[i][0] == wxT('-') || argv[i][0] == wxT('/')))
+#else
+		if (!argv[i].empty() && (argv[i][0] == wxT('-') || argv[i][0] == wxT('/')))
+#endif
 			if (wxIsalpha(argv[i][1]) && wxIsupper(argv[i][1]))
 				argv[i][1] = wxTolower(argv[i][1]);
 	}
