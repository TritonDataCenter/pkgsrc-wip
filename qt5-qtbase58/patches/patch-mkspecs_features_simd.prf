$NetBSD: patch-mkspecs_features_simd.prf,v 1.2 2015/10/26 19:03:59 adam Exp $

* Use libtool 

--- mkspecs/features/simd.prf.orig	2014-12-05 16:24:38.000000000 +0000
+++ mkspecs/features/simd.prf
@@ -33,12 +33,12 @@ defineTest(addSimdCompiler) {
             export(SOURCES)
         } else {
             # We need special compiler flags
-            $${name}_compiler.commands = $$QMAKE_CXX -c $(CXXFLAGS) $$cflags $(INCPATH) ${QMAKE_FILE_IN}
+            $${name}_compiler.commands = $(LIBTOOL) --silent --mode=compile $$QMAKE_CXX -c $(CXXFLAGS) $$cflags $(INCPATH) ${QMAKE_FILE_IN}
             msvc: $${name}_compiler.commands += -Fo${QMAKE_FILE_OUT}
-            else: $${name}_compiler.commands += -o ${QMAKE_FILE_OUT}
+            else: $${name}_compiler.commands += -o $$OBJECTS_DIR/${QMAKE_FILE_BASE}.lo
 
             $${name}_compiler.dependency_type = TYPE_C
-            $${name}_compiler.output = ${QMAKE_VAR_OBJECTS_DIR}${QMAKE_FILE_BASE}$${first(QMAKE_EXT_OBJ)}
+            $${name}_compiler.output = $$OBJECTS_DIR/${QMAKE_FILE_BASE}.lo
             $${name}_compiler.input = $$sources_var
             $${name}_compiler.variable_out = OBJECTS
             $${name}_compiler.name = compiling[$${name}] ${QMAKE_FILE_IN}
@@ -62,12 +62,12 @@ defineTest(addSimdCompiler) {
             SOURCES += $$eval($$asm_var)
             export(SOURCES)
         } else {
-            $${name}_assembler.commands = $$QMAKE_CC -c $(CFLAGS)
+            $${name}_assembler.commands = $(LIBTOOL) --silent --mode=compile $$QMAKE_CC -c $(CFLAGS)
             !contains(QT_CPU_FEATURES, $${name}): $${name}_assembler.commands += $$cflags
             clang:no_clang_integrated_as: $${name}_assembler.commands += -fno-integrated-as
-            $${name}_assembler.commands += $(INCPATH) ${QMAKE_FILE_IN} -o ${QMAKE_FILE_OUT}
+            $${name}_assembler.commands += $(INCPATH) ${QMAKE_FILE_IN} -o $$OBJECTS_DIR/${QMAKE_FILE_BASE}.lo
             $${name}_assembler.dependency_type = TYPE_C
-            $${name}_assembler.output = ${QMAKE_VAR_OBJECTS_DIR}${QMAKE_FILE_BASE}$${first(QMAKE_EXT_OBJ)}
+            $${name}_assembler.output = $$OBJECTS_DIR/${QMAKE_FILE_BASE}.lo
             $${name}_assembler.input = $$asm_var
             $${name}_assembler.variable_out = OBJECTS
             $${name}_assembler.name = assembling[$${name}] ${QMAKE_FILE_IN}
